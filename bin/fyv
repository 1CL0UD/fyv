#!/bin/bash

# fyv ‚Äî smart wrapper for yay/paru with auto-logging and bulk install
# Maintains a persistent pkglist.txt of everything you install
# Designed for Arch Linux + AUR

set -euo pipefail

# Configurable package list file (default: ~/pkglist.txt)
PKG_LIST="${FYV_PKG_LIST:-$HOME/pkglist.txt}"

# Colors (optional ‚Äî comment out to disable)
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Detect AUR helper ‚Äî prefer paru, fallback to yay
if command -v paru &> /dev/null; then
    HELPER="paru"
elif command -v yay &> /dev/null; then
    HELPER="yay"
else
    echo -e "${RED}‚ùå Error: Neither 'paru' nor 'yay' found. Install one first.${NC}" >&2
    exit 1
fi

# Function to safely add package to PKG_LIST (no duplicates)
log_package() {
    local pkg="$1"
    # Skip if already in file
    if grep -Fxq "$pkg" "$PKG_LIST" 2>/dev/null; then
        echo -e "${BLUE}üìù $pkg already logged in $PKG_LIST${NC}" >&2
        return 0
    fi
    # Ensure directory exists
    mkdir -p "$(dirname "$PKG_LIST")" 2>/dev/null || true
    # Append package
    echo "$pkg" >> "$PKG_LIST"
    echo -e "${GREEN}‚úÖ Added $pkg to $PKG_LIST${NC}" >&2
}

# Show help
show_help() {
    cat <<EOF
${BLUE}fyv ‚Äî smart AUR helper wrapper with auto-logging${NC}

${GREEN}Usage:${NC}
  fyv -S <package>...        ‚Üí Install + auto-log to ${PKG_LIST}
  fyv -flist <file.txt>      ‚Üí Bulk install from file + auto-log successes
  fyv --help                 ‚Üí Show this help

${YELLOW}üí° Tip:${NC} Set FYV_PKG_LIST to customize log path.
Example: export FYV_PKG_LIST=~/backup/packages.txt

${YELLOW}üí° Bulk install behavior:${NC}
  - Only logs packages that install successfully
  - Skips failed packages (doesn‚Äôt stop)
  - Never duplicates entries
  - Ignores blank lines and #comments
EOF
}

# No args? Show help.
if [[ $# -eq 0 ]]; then
    show_help
    exit 1
fi

# Parse command line
while [[ $# -gt 0 ]]; do
    case "$1" in
        -h|--help)
            show_help
            exit 0
            ;;
        -S)
            shift
            if [[ $# -eq 0 ]]; then
                echo -e "${RED}‚ùå Error: No package specified after -S${NC}" >&2
                exit 1
            fi

            for pkg in "$@"; do
                echo -e "\n${BLUE}üöÄ Installing: $pkg${NC}"
                if $HELPER -S --needed "$pkg"; then
                    log_package "$pkg"
                else
                    echo -e "${RED}‚ùå Failed to install: $pkg${NC}" >&2
                    exit 1
                fi
            done
            exit 0
            ;;
        -flist)
            shift
            if [[ $# -eq 0 ]]; then
                echo -e "${RED}‚ùå Error: No file specified after -flist${NC}" >&2
                exit 1
            fi

            FILE="$1"
            if [[ ! -f "$FILE" ]]; then
                echo -e "${RED}‚ùå Error: File not found: $FILE${NC}" >&2
                exit 1
            fi

            echo -e "${BLUE}üì¶ Bulk installing from: $FILE${NC}"
            echo "========================================"
            failed=()
            count=0

            while IFS= read -r pkg; do
                # Skip empty lines and comments
                [[ -z "$pkg" || "$pkg" =~ ^[[:space:]]*# ]] && continue

                echo -e "\n${BLUE}‚û°Ô∏è  Installing: $pkg${NC}"

                # Try to install ‚Äî suppress excessive output with 2>/dev/null (optional)
                if $HELPER -S --needed --noconfirm "$pkg" 2>/dev/null; then
                    echo -e "${GREEN}‚úÖ Installed: $pkg${NC}"
                    log_package "$pkg"
                    ((count++))
                else
                    echo -e "${RED}‚ùå Failed to install: $pkg ‚Äî skipping...${NC}"
                    failed+=("$pkg")
                    # ‚Üê Do NOT log, do NOT exit, just continue
                fi
            done < "$FILE"

            echo "========================================"
            echo -e "${GREEN}üéâ Successfully installed and logged $count packages.${NC}"

            if [[ ${#failed[@]} -gt 0 ]]; then
                echo -e "${YELLOW}‚ö†Ô∏è  The following packages FAILED and were skipped:${NC}"
                printf '   - %s\n' "${failed[@]}"
                # Still exit 0 ‚Äî partial success is allowed
            else
                echo -e "${GREEN}‚ú® All packages installed and logged successfully!${NC}"
            fi

            exit 0
            ;;
        *)
            echo -e "${RED}‚ùå Unknown option: $1${NC}" >&2
            show_help
            exit 1
            ;;
    esac
done
